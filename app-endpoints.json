{
	"template": {
		"id": 0,
		"name": "template",
		"descr": "description of what this endpoint does",
		"resource": "",
		"protocol": "http",
		"access": ["all"],
		"method": "GET",
		"path": "/",
		"pathParams": [],
		"query": "",
		"queryParams": [],
		"consumes": "",
		"produces": "application/json",
		"headers": [],
		"entity": "{}",
		"response": "please provide a response",
		"status": 200,
		"url": "http://localhost:8080",
		"envs": [
			"local=http://localhost:8080",
			"dev=http://some-dev-host:port",
			"test=http://some-test-host:port"
		],
		"execute": false
	},
	"collections": [
		{
			"resource": "JarredResource",
			"path": "/",
			"endpoints": [
				{
					"id": 1,
					"name": "home",
					"descr": "Creates a context using 'site content' and return the html resource at '/home'",
					"path": "/ws",
					"produces": "text/html",
					"response": "<html>...</html>",
					"execute": false
				},
				{
					"id": 2,
					"name": "api",
					"descr": "Creates a context using 'site content' and return the html resource at '/api'",
					"path": "/ws/api",
					"produces": "text/html",
					"response": "<html>...</html>",
					"execute": false
				},
				{
					"id": 3,
					"name": "docs",
					"descr": "Creates a context using 'site content' and return the html resource at '/docs'",
					"path": "/ws/docs",
					"produces": "text/html",
					"response": "<html>...</html>",
					"execute": false
				},
				{
					"id": 4,
					"name": "contact",
					"descr": "Creates a context using 'site content' and return the html resource at '/contact'",
					"path": "/ws/contact",
					"produces": "text/html",
					"response": "<html>...</html>",
					"execute": false
				}
			]
		},
		{
			"resource": "ContentResource",
			"path": "/",
			"endpoints": [
				{
					"id": 1,
					"name": "hello",
					"descr": "Tests to check if the application is up and running",
					"path": "/ws/hello",
					"produces": "text/plain",
					"headers": [
						"user-id=admin",
						"access-token=1346233178"
					],
					"response": "Hellooo World!!",
					"execute": false
				},
				{
					"id": 2,
					"name": "home",
					"descr": "Creates a context using 'site content' and return the html resource at '/theme/home'",
					"path": "/ws/home",
					"produces": "text/html",
					"response": "/theme/home.html",
					"execute": false
				},
				{
					"id": 3,
					"name": "aboutus",
					"descr": "Creates a context using 'site content' and return the html resource at '/theme/about'",
					"path": "/ws/aboutus",
					"produces": "text/html",
					"response": "/theme/about.html",
					"execute": false
				},
				{
					"id": 4,
					"name": "contactus",
					"descr": "Creates a context using 'site content' and return the html resource at '/theme/contact'",
					"path": "/ws/contactus",
					"produces": "text/html",
					"response": "<html>...</html>",
					"execute": false
				},
				{
					"id": 6,
					"name": "user_by_email",
					"descr": "Search user by email",
					"path": "/ws/user/{email}",
					"pathParams": ["email"],
					"produces": "application/json",
					"response": "{\"user\": {}}",
					"execute": false
				},
				{
					"id": 7,
					"name": "user_login",
					"protocol": "https",
					"descr": "Authenticate a guest by username",
					"access": ["admin", "guest"],
					"path": "/ws/user/login/{username}",
					"pathParams": ["email"],
					"produces": "application/json",
					"response": "{\"user\": {}}",
					"execute": false
				},
				{
					"id": 8,
					"name": "subscribe_a_user",
					"protocol": "https",
					"descr": "Subscribes a user to receive notification of new blogs via email",
					"path": "/ws/user/subscribe/{email}",
					"pathParams": ["email"],
					"method": "post",
					"produces": "application/json",
					"response": "{}",
					"execute": false
				},
				{
					"id": 9,
					"name": "retrieve_all_blogs",
					"descr": "Search user by email",
					"path": "/ws/blog",
					"produces": "application/json",
					"response": "{\"blogs\": []}",
					"execute": false
				},
				{
					"id": 10,
					"name": "view_blog_by_id",
					"descr": "Creates a context using a blog retrieved by id and return the html resource at '/theme/single'",
					"path": "/ws/blog/{blogId}",
					"pathParams": ["blogId"],
					"produces": "text/html",
					"response": "<html>...</html>",
					"execute": false
				},
				{
					"id": 11,
					"name": "get_blog_by_id",
					"descr": "Retrieve blog by id and return as json",
					"path": "/ws/blog/{blogId}",
					"pathParams": ["blogId"],
					"produces": "application/json",
					"response": "{\"blog\": {}}",
					"execute": false
				},
				{
					"id": 12,
					"name": "get_blogs_by_page",
					"descr": "Retrieve blogs give a start and limit, and return as json",
					"path": "/ws/blog/page",
					"query": "start={start}&limit={limit}",
					"queryParams": ["start","limit"],
					"produces": "application/json",
					"response": "{\"blogs\": []}",
					"execute": false
				},
				{
					"id": 13,
					"name": "search_blogs_by_category",
					"descr": "Retrieve blogs by category and return as json list",
					"path": "/ws/blog/search/{category}",
					"pathParams": ["category"],
					"produces": "application/json",
					"response": "{\"blogs\": []}",
					"execute": false
				},
				{
					"id": 14,
					"name": "search_blogs_by_criteria",
					"descr": "Retrieve blogs by searching possible partial or full matches to the title or category and return as json list",
					"path": "/ws/blog/search",
					"query": "title={title}&category={category}",
					"queryParams": ["title","category"],
					"produces": "application/json",
					"response": "{\"blogs\": []}",
					"execute": false
				},
				{
					"id": 15,
					"name": "post_blog_comment",
					"descr": "Post a comment for a blog or to another comment, and return updated blog",
					"path": "/ws/blog/{blogId}/comment",
					"method": "post",
					"access": ["admin","guest"],
					"consumes": "application/x-www-form-urlencoded",
					"produces": "application/json",
					"response": "{\"blogs\": \"\"}",
					"execute": false
				},
				{
					"id": 16,
					"name": "retrieve_categories",
					"descr": "Return a list of all categories",
					"path": "/ws/category",
					"produces": "application/json",
					"response": "{\"categories\": []}",
					"execute": true
				},
				{
					"id": 17,
					"name": "post_mail",
					"descr": "Post a message via email and return status (1, 0)",
					"path": "/ws/mail",
					"method": "post",
					"consumes": "application/x-www-form-urlencoded",
					"produces": "application/json",
					"response": "{\"result\": \"0\"}",
					"entity": "{\"name\":{\"type\":\"text\",\"value\":\"\"},\"phone\":{\"type\":\"text\",\"value\":\"\"},\"email\":{\"type\":\"email\",\"value\":\"\"},\"message\":{\"type\":\"text\",\"value\":\"\"}}",
					"execute": false
				},
				{
					"id": 18,
					"name": "retrieve_site_content",
					"descr": "Retrieve site content and return as json",
					"path": "/ws/site",
					"produces": "application/json",
					"response": "{\r\n\t\"site\":{\r\n\t\t\"contactUs\": {\r\n\t\t\t\"actionBtn\": \"\",\r\n\t\t\t\"content\": {\r\n\t\t\t\t\"par1\": \"fruits and veggies\",\r\n\t\t\t\t\"par2\": \"milk and honey\"\r\n\t\t\t},\r\n\t\t\t\"email\": \"\",\r\n\t\t\t\"header\": \"Contact Us\",\r\n\t\t\t\"phone\": \"\",\r\n\t\t\t\"social\": \"\",\r\n\t\t\t\"subHeader\": \"Contact <span class=\\\"main-color\\\">Me<\/span>\",\r\n\t\t\t\"subTitle\": \"Contact Me\",\r\n\t\t\t\"subscribeText\": \"\",\r\n\t\t\t\"times\": \"\",\r\n\t\t\t\"title\": \"\"\r\n\t\t},\r\n\t\t\"aboutUs\": {\r\n\t\t\t\"actionBtn\": \"Hire me\",\r\n\t\t\t\"content\": {\r\n\t\t\t\t\"par1\": \"par1 content\",\r\n\t\t\t\t\"par2\": \"par2 content\",\r\n\t\t\t\t\"par3\": \"par3 content\"\r\n\t\t\t},\r\n\t\t\t\"header\": \"About Us\",\r\n\t\t\t\"skills\": [\r\n\t\t\t\t\"Web Developer\",\r\n\t\t\t\t\"Freelancer\",\r\n\t\t\t\t\"Architecture\",\r\n\t\t\t\t\"Consultant\"\r\n\t\t\t],\r\n\t\t\t\"subHeader\": \"A simple web blog\",\r\n\t\t\t\"subTitle\": \"I am a developer\",\r\n\t\t\t\"subscribeText\": \"Subscribe for my updates\",\r\n\t\t\t\"title\": \"JarredWeb - About Memmmm\"\r\n\t\t},\r\n\t\t\"dateCreated\": \"\",\r\n\t\t\"mapValues\": {\r\n\t\t\t\"aboutText\": \"About\",\r\n\t\t\t\"adminText\": \"Admin\",\r\n\t\t\t\"articleByText\": \"Article By\",\r\n\t\t\t\"contactText\": \"Contact\",\r\n\t\t\t\"copyrightText\": \"Copyright 2017. All rights reserved\",\r\n\t\t\t\"designedByText\": \"Designed By\",\r\n\t\t\t\"designerHref\": \"http:\/\/www.uipasta.com\",\r\n\t\t\t\"designerText\": \"UIPasta\",\r\n\t\t\t\"discussText\": \"Discuss about post\",\r\n\t\t\t\"engineText\": \"JarredWeb\",\r\n\t\t\t\"homeText\": \"Home\",\r\n\t\t\t\"loadBtnText\": \"Load\",\r\n\t\t\t\"poweredByText\": \"Powered By\",\r\n\t\t\t\"queryText\": \"Type your search query above and then press to enter or click on icon\",\r\n\t\t\t\"readMoreText\": \"Read More\",\r\n\t\t\t\"siteTitle\": \"JarredWeb\",\r\n\t\t\t\"submitText\": \"Submit\",\r\n\t\t\t\"subscriberText\": \"Subscribe to receive notification of new episodes\",\r\n\t\t\t\"suggestionText\": \"You May Also Like\",\r\n\t\t\t\"themeName\": \"Dynamic Page\",\r\n\t\t\t\"title\": \"JarredWeb - Web In a Jar\"\r\n\t\t},\r\n\t\t\"_id\": \"site_content\",\r\n\t\t\"type\": \"site_content\"\r\n\t}\r\n}",
					"execute": false
				},
				{
					"id": 19,
					"name": "named_page_view",
					"descr": "Fetch page info from dynamic app configuration and return the html resource in the 'href' attribute",
					"path": "/ws/p/{page}",
					"pathParams": ["page"],
					"produces": "text/html",
					"response": "<html>...</html>",
					"execute": false
				},
				{
					"id": 20,
					"name": "named_page_data",
					"descr": "Fetch page info from dynamic app configuration and return the json resource specified by the bound tables",
					"path": "/ws/d/{page}",
					"pathParams": ["page"],
					"produces": "application/json",
					"response": "{}",
					"execute": false
				},
				{
					"id": 21,
					"name": "named_page_select_query",
					"descr": "The select query parameters are dynamic - they are bound to the selected query. Fetch page info from dynamic app configuration and return the data as resource specified by the bound query parameters",
					"path": "/ws/q/{page}/{query}}",
					"pathParams": ["page","query"],
					"method": "post",
					"consumes": "application/json",
					"produces": "application/json",
					"entity": "{\"params\":{}}",
					"response": "{}",
					"execute": false
				},
				{
					"id": 21,
					"name": "named_page_updaet_query",
					"descr": "The update query(insert, update, delete) parameters are dynamic - they are bound to the selected query. Fetch page info from dynamic app configuration and return the data as resource specified by the bound query parameters",
					"path": "/ws/u/{page}/{query}}",
					"pathParams": ["page","query"],
					"method": "post",
					"consumes": "application/json",
					"produces": "application/json",
					"entity": "{\"result\": \"1/0\"}",
					"response": "{}",
					"execute": false
				}
			]
		},
		{
			"resource": "AdminResource",
			"path": "/admin",
			"endpoints": [
				{
					"id": 1,
					"name": "admin_with_no_path",
					"protocol": "https",
					"descr": "Creates same response as resource at '/admin/login'",
					"path": "/ws/admin",
					"produces": "text/html",
					"response": "<html>...</html>",
					"execute": false
				},
				{
					"id": 2,
					"name": "get_admin_login",
					"protocol": "https",
					"descr": "Return the html resource at '/admin/login'",
					"path": "/ws/admin/login",
					"produces": "text/html",
					"response": "<html>...</html>",
					"execute": false
				},
				{
					"id": 3,
					"name": "post_admin_login",
					"protocol": "https",
					"descr": "Signs in user and returns authenticated user info",
					"path": "/ws/admin/login",
					"method": "post",
					"access": ["admin"],
					"consumes": "application/x-www-form-urlencoded",
					"produces": "application/json",
					"entity": "{\"username\": \"\", \"password\": \"\"}",
					"response": "{\"user\": {}}",
					"execute": false
				},
				{
					"id": 4,
					"name": "post_register",
					"protocol": "https",
					"descr": "Register a user with the application and return the registered user info",
					"path": "/ws/admin/register",
					"method": "post",
					"consumes": "application/x-www-form-urlencoded",
					"produces": "application/json",
					"entity": "{\"username\": \"\", \"password\": \"\", \"confirm-password\": \"\", \"email\": \"\", \"firstname\": \"\", \"lastname\": \"\"}",
					"response": "{\"user\": {}}",
					"execute": false
				},
				{
					"id": 5,
					"name": "get_admin_logout",
					"protocol": "https",
					"descr": "logs user out and redirects to resource at '/'",
					"path": "/ws/admin/logout",
					"access": ["admin"],
					"produces": "",
					"response": "redirect",
					"status": 302,
					"execute": false
				},
				{
					"id": 6,
					"name": "get_admin_home",
					"protocol": "https",
					"descr": "Return the html resource at '/admin/listing'",
					"path": "/ws/admin/home",
					"access": ["admin"],
					"produces": "text/html",
					"response": "<html>...</html>",
					"execute": false
				},
				{
					"id": 7,
					"name": "post_blog",
					"protocol": "https",
					"descr": "Create an empty blog and return created blog",
					"path": "/ws/admin/blog",
					"method": "post",
					"access": ["admin"],
					"produces": "application/json",
					"response": "{}",
					"execute": false
				},
				{
					"id": 8,
					"name": "get_blog_preview_page",
					"protocol": "https",
					"descr": "Return the html resource at '/admin/preview'",
					"path": "/ws/admin/blog/{blogId}/preview",
					"produces": "text/html",
					"response": "<html>...</html>",
					"execute": false
				},
				{
					"id": 9,
					"name": "get_blog_editor_page",
					"protocol": "https",
					"descr": "Return the html resource at '/admin/editor'",
					"path": "/ws/admin/blog/{blogId}/editor",
					"produces": "text/html",
					"response": "<html>...</html>",
					"execute": false
				},
				{
					"id": 10,
					"name": "get_blog_by_id_amin",
					"protocol": "https",
					"descr": "Retrieves the specified blog by id and return as json for either 'preview' or 'editor'",
					"path": "/ws/admin/blog/{blogId}",
					"produces": "application/json",
					"response": "{\"blog\": {}, \"user\": {}}",
					"execute": false
				},
				{
					"id": 11,
					"name": "update_blog",
					"protocol": "https",
					"descr": "Update blog with provided id and returns updated blog",
					"path": "/ws/admin/blog/{blogId}",
					"pathParams": ["blogId"],
					"method": "put",
					"access": ["admin"],
					"consumes": "application/x-www-form-urlencoded",
					"produces": "application/json",
					"entity": "{\"title\": \"\", \"category\": \"\", \"summary\": \"\", \"content\": \"\"}",
					"response": "{}",
					"execute": false
				},
				{
					"id": 12,
					"name": "delete_blog",
					"descr": "delete blog with provided id and returns a status (1, 0)",
					"path": "/ws/admin/blog/{blogId}",
					"pathParams": ["blogId"],
					"method": "delete",
					"access": ["admin"],
					"produces": "application/json",
					"response": "{\"result\": 1}",
					"execute": false
				},
				{
					"id": 13,
					"name": "get_blog_comments",
					"protocol": "https",
					"descr": "Creates context using comments for blog with provided id and returns the html resource at '/admin/comments'",
					"path": "/ws/admin/blog/{blogId}/comments",
					"pathParams": ["blogId"],
					"access": ["admin"],
					"produces": "text/html",
					"response": "<html>...</html>",
					"execute": false
				},
				{
					"id": 14,
					"name": "add_comment_review",
					"protocol": "https",
					"descr": "Update a blog comment with a review and return the updated blog",
					"path": "/ws/admin/blog/{blogId}/comments/{commentId}",
					"pathParams": ["blogId","commentId"],
					"access": ["admin"],
					"consumes": "application/x-www-form-urlencoded",
					"produces": "application/json",
					"response": "{\"blog\":{}}",
					"execute": false
				},
				{
					"id": 15,
					"name": "create_category",
					"descr": "Create a new category and returns the created category",
					"path": "/ws/admin/category/{name}",
					"pathParams": ["name"],
					"method": "post",
					"access": ["admin"],
					"produces": "application/json",
					"response": "{\"category\": {}}",
					"execute": false
				},
				{
					"id": 16,
					"name": "rename_category",
					"descr": "Renames a category and returns the updated category",
					"path": "/ws/admin/category/{catId}/{name}",
					"pathParams": ["catId","name"],
					"method": "put",
					"access": ["admin"],
					"produces": "application/json",
					"response": "{\"category\": {}}",
					"execute": false
				},
				{
					"id": 17,
					"name": "remove_category",
					"descr": "Delete a category and returns the delete status (1, 0)",
					"path": "/ws/admin/category/{catId}",
					"pathParams": ["catId"],
					"method": "delete",
					"access": ["admin"],
					"produces": "application/json",
					"response": "{\"result\": 1}",
					"execute": false
				},
				{
					"id": 18,
					"name": "get_admin_profile_page",
					"descr": "returns the html resource at '/admin/profile'",
					"path": "/ws/admin/profile",
					"access": ["admin"],
					"produces": "text/html",
					"response": "<html>...</html>",
					"execute": false
				},
				{
					"id": 19,
					"name": "get_admin_profile_data",
					"protocol": "https",
					"descr": "Retrieve admin profile and returns as json",
					"path": "/ws/admin/profile",
					"access": ["admin"],
					"produces": "application/json",
					"response": "{\"user\": {}}",
					"execute": false
				},
				{
					"id": 20,
					"name": "update_admin_profile",
					"descr": "updates the admin profile and returns updated profile",
					"path": "/ws/admin/profile",
					"method": "put",
					"access": ["admin"],
					"consumes": "application/x-www-form-urlencoded",
					"produces": "application/json",
					"entity": "{\"phone\": \"\", \"email\": \"\", \"title\": \"\", \"photo\": \"\", \"firstname\": \"\", \"lastname\": \"\", \"facebook\": \"\", \"twitter\": \"\", \"linkedin\": \"\", \"github\": \"\", \"bio\": \"\"}",
					"response": "{\"user\": {}}",
					"execute": false
				},
				{
					"id": 20,
					"name": "update_admin_password",
					"descr": "updates the admin password and returns admin profile",
					"path": "/ws/admin/profile/password",
					"method": "put",
					"access": ["admin"],
					"consumes": "application/x-www-form-urlencoded",
					"produces": "application/json",
					"entity": "{\"currentPassword\": \"\", \"newPassword\": \"\"}",
					"response": "{\"user\": {}}",
					"execute": false
				},
				{
					"id": 21,
					"name": "post_profile_photo",
					"protocol": "https",
					"descr": "upload a photo for the admin profile and returns uploaded resource url",
					"path": "/ws/admin/photo",
					"method": "post",
					"access": ["admin"],
					"consumes": "multipart/form-data",
					"produces": "application/json",
					"entity": "{\"file\":{\"type\":\"file\",\"value\":\"\"}}",
					"response": "{\"src\": {}}",
					"execute": false
				},
				{
					"id": 22,
					"name": "get_dynamic_content_page",
					"descr": "Return html resource at '/admin/dynamic'",
					"path": "/ws/admin/dynamic",
					"access": ["admin"],
					"produces": "text/html",
					"response": "<html>...</html>",
					"execute": false
				},
				{
					"id": 23,
					"name": "get_dynamic_content_data",
					"protocol": "https",
					"descr": "Fetches the entire dynamic configuration of the application and returns as a json entity. This is used by the 'CreatePage' and 'SyncTables' components in 'dynamic.html'",
					"access": ["admin"],
					"path": "/ws/admin/dynamic",
					"produces": "application/json",
					"response": "{\r\n  \"dyna\" : {\r\n    \"tables\" : {\r\n      \"tbl_category\" : {\r\n        \"_id\" : \"tbl_category\",\r\n        \"columns\" : {\r\n          \"category_created_ts\" : {\r\n            \"autoinc\" : false,\r\n            \"notnull\" : true,\r\n            \"type\" : \"text\",\r\n            \"visible\" : true\r\n          },\r\n          \"category_id\" : {\r\n            \"autoinc\" : false,\r\n            \"notnull\" : true,\r\n            \"type\" : \"integer\",\r\n            \"visible\" : true\r\n          },\r\n          \"category_name\" : {\r\n            \"autoinc\" : false,\r\n            \"notnull\" : true,\r\n            \"type\" : \"text\",\r\n            \"visible\" : true\r\n          }\r\n        }\r\n      },\r\n      \"tbl_items\" : {\r\n        \"_id\" : \"tbl_items\",\r\n        \"columns\" : {\r\n          \"item_code\" : {\r\n            \"autoinc\" : false,\r\n            \"notnull\" : true,\r\n            \"type\" : \"integer\",\r\n            \"visible\" : true\r\n          },\r\n          \"item_id\" : {\r\n            \"autoinc\" : false,\r\n            \"notnull\" : false,\r\n            \"type\" : \"integer\",\r\n            \"visible\" : true\r\n          },\r\n          \"item_name\" : {\r\n            \"autoinc\" : false,\r\n            \"notnull\" : true,\r\n            \"type\" : \"text\",\r\n            \"visible\" : true\r\n          }\r\n        }\r\n      }\r\n    },\r\n    \"dateCreated\" : 1504190351184,\r\n    \"pages\" : {\r\n      \"dynapage\" : {\r\n        \"_id\" : \"dynapage\",\r\n        \"content\" : \"Awesome dynapage stuff\",\r\n        \"href\" : \"\/theme\/dynapage\",\r\n        \"link\" : \"Dyna Page\",\r\n        \"name\" : \"A dynamic page example\",\r\n        \"queries\" : {\r\n          \"select_by_id\" : \"by_id\"\r\n        },\r\n        \"tables\" : {\r\n          \"tbl_items\" : \"all_items\"\r\n        },\r\n        \"title\" : \"\"\r\n      }\r\n    },\r\n    \"_rev\" : \"16-0cd1348802a751df796d04cb070ea9fd\",\r\n    \"_id\" : \"dyna_content\",\r\n    \"type\" : \"dyna_content\",\r\n    \"queries\" : {\r\n      \"select_by_id\" : {\r\n        \"_id\" : \"select_by_id\",\r\n        \"params\" : [ \"id\", \"\" ],\r\n        \"squel\" : \"select * from tbl_items where item_id = :id\"\r\n      }\r\n    }\r\n  }\r\n}",
					"execute": false
				},
				{
					"id": 24,
					"name": "get_dyna_table_metadata",
					"protocol": "https",
					"descr": "Fetches a table's metadata from the dynamic configuration of the application and returns as a json entity.",
					"access": ["admin"],
					"path": "/ws/admin/{table}/meta",
					"pathParams": ["table"],
					"produces": "application/json",
					"response": "{\"table\":{},\"user\":{}}",
					"execute": false
				},
				{
					"id": 25,
					"name": "sync_dyna_table",
					"protocol": "https",
					"descr": "Creates an entry for a database table in the dynamic configuration of the app. On success, it return the new table entry",
					"access": ["admin"],
					"method": "post",
					"path": "/ws/admin/table/{table}/sync",
					"pathParams": ["table"],
					"produces": "application/json",
					"response": "{}",
					"execute": false
				},
				{
					"id": 26,
					"name": "fetch_dyna_table",
					"protocol": "https",
					"descr": "Fetches and returns a table's entry from the dynamic configuration of the app",
					"access": ["admin"],
					"path": "/ws/admin/table/{table}/meta",
					"pathParams": ["table"],
					"produces": "application/json",
					"response": "{}",
					"execute": false
				},
				{
					"id": 27,
					"name": "fetch_db_table_names",
					"protocol": "https",
					"descr": "Fetches a collection of names of tables existing in the database. Used in 'InsertRecord' component",
					"access": ["admin"],
					"path": "/ws/admin/table/names",
					"produces": "application/json",
					"response": "{}",
					"execute": false
				},
				{
					"id": 28,
					"name": "create_db_table",
					"protocol": "https",
					"descr": "create a new table in the database. Used in 'CreateTable' component. Returns tables metadata in updated dynamic app configuration",
					"access": ["admin"],
					"method": "post",
					"path": "/ws/admin/table/{table}",
					"pathParams": ["table"],
					"consumes": "application/json",
					"produces": "application/json",
					"entity": "{}",
					"response": "{}",
					"execute": false
				},
				{
					"id": 29,
					"name": "fetch_db_table_data",
					"protocol": "https",
					"descr": "Fetch all data from a table in the database. Used in '??????' component.",
					"access": ["admin"],
					"path": "/ws/admin/table/{table}",
					"pathParams": ["table"],
					"produces": "application/json",
					"response": "{}",
					"execute": false
				},
				{
					"id": 30,
					"name": "update_db_table_data",
					"protocol": "https",
					"descr": "update a record in the table in the database. Used in 'UpdateRecord' component. Returns 1 (success) or 0 (failure)",
					"access": ["admin"],
					"method": "put",
					"path": "/ws/admin/table/{table}",
					"pathParams": ["table"],
					"consumes": "application/json",
					"produces": "application/json",
					"entity": "{}",
					"response": "{}",
					"execute": false
				},
				{
					"id": 31,
					"name": "fetch_columns_db_tables",
					"protocol": "https",
					"descr": "Fetch columns data for all tables in the database. Used in 'SyncTables' component.",
					"access": ["admin"],
					"path": "/ws/admin/table/{table}/columns",
					"pathParams": ["table"],
					"produces": "application/json",
					"entity": "{}",
					"response": "{}",
					"execute": false
				},
				{
					"id": 32,
					"name": "select_db_table_data",
					"protocol": "https",
					"descr": "Search a database table data using provided criteria params. Used in 'UpdateRecord' component.",
					"access": ["admin"],
					"method": "post",
					"path": "/ws/admin/table/{table}/query",
					"pathParams": ["table"],
					"consumes": "application/json",
					"produces": "application/json",
					"entity": "{}",
					"response": "{}",
					"execute": false
				},
				{
					"id": 33,
					"name": "retrieve_queries_meta",
					"protocol": "https",
					"descr": "Retrieve stored queries metadata from dynamic app configuration. Used in 'QueryView' component.",
					"access": ["admin"],
					"path": "/ws/admin/query",
					"produces": "application/json",
					"response": "{}",
					"execute": false
				},
				{
					"id": 34,
					"name": "execute_stored_query",
					"protocol": "https",
					"descr": "Execute a stored query again the database using provided criteria params. Used in 'QueryView' component.",
					"access": ["admin"],
					"method": "post",
					"path": "/ws/admin/query/{query}",
					"pathParams": ["query"],
					"consumes": "application/json",
					"produces": "application/json",
					"entity": "{}",
					"response": "{}",
					"execute": false
				},
				{
					"id": 35,
					"name": "update_stored_query",
					"protocol": "https",
					"descr": "Update a stored query in the dynamic app configuration. Used in '??????' component.",
					"access": ["admin"],
					"method": "put",
					"path": "/ws/admin/query/{query}",
					"pathParams": ["query"],
					"consumes": "application/json",
					"produces": "application/json",
					"entity": "{}",
					"response": "{}",
					"execute": false
				},
				{
					"id": 36,
					"name": "delete_stored_query",
					"protocol": "https",
					"descr": "Delete a stored query in the dynamic app configuration. Used in 'QueryView' component.",
					"access": ["admin"],
					"method": "delete",
					"path": "/ws/admin/query/{query}",
					"pathParams": ["query"],
					"produces": "application/json",
					"response": "{}",
					"execute": false
				},
				{
					"id": 37,
					"name": "get_dbviews_data",
					"protocol": "https",
					"descr": "Retrieve tables and queries data from dynamic configuration and return as json",
					"path": "/ws/admin/dbviews",
					"access": ["admin"],
					"produces": "application/json",
					"response": "{\"user\":{},\"tables\":{},\"queries\":{}}",
					"execute": false
				},
				{
					"id": 39,
					"name": "dbviews_insert_table_data",
					"protocol": "https",
					"descr": "Insert row into table and return as 1 or 0. The request entity varied depending on the targeted table",
					"method": "POST",
					"path": "/ws/admin/dbviews/table/{table}",
					"access": ["admin"],
					"pathParams": ["table"],
					"consumes": "application/x-www-form-urlencoded",
					"produces": "application/json",
					"response": "{\"result\": 1}",
					"execute": false
				},
				{
					"id": 40,
					"name": "dbviews_update_table_data",
					"protocol": "https",
					"descr": "Update row into table and return as 1 or 0. The request entity varied depending on the targeted table",
					"method": "PUT",
					"path": "/ws/admin/dbviews/table/{table}",
					"access": ["admin"],
					"pathParams": ["table"],
					"consumes": "application/x-www-form-urlencoded",
					"produces": "application/json",
					"response": "{\"result\": 1}",
					"execute": false
				},
				{
					"id": 41,
					"name": "get_dynamic_pages_view",
					"protocol": "https",
					"descr": "Return html resource at '/admin/dynamic'",
					"path": "/ws/admin/pages",
					"access": ["admin"],
					"produces": "text/html",
					"response": "<html>...</html>",
					"execute": false
				},
				{
					"id": 42,
					"name": "save_dynamic_page",
					"protocol": "https",
					"descr": "Creates a new entry (or updates one if exists) in the dynamic configuration of the app. It's use by the 'CreatePage' in dynamic.html.' On success, it returns the created/updated page",
					"access": ["admin"],
					"method": "post",
					"path": "/ws/admin/pages/{pageId}",
					"pathParams": ["pageId"],
					"produces": "application/json",
					"response": "{}",
					"execute": false
				},
				{
					"id": 43,
					"name": "get_about_us_admin_view",
					"protocol": "https",
					"descr": "Return html resource at '/admin/aboutus'",
					"path": "/ws/admin/about",
					"access": ["admin"],
					"produces": "text/html",
					"response": "<html>...</html>",
					"execute": false
				},
				{
					"id": 44,
					"name": "get_about_us_admin_data",
					"protocol": "https",
					"descr": "Retrieves 'about us' configuration data and returns as json",
					"path": "/ws/admin/about",
					"access": ["admin"],
					"produces": "application/json",
					"response": "{\"user\":{},\"siteId\":'',\"aboutUs\":{}}",
					"execute": false
				},
				{
					"id": 45,
					"name": "update_about_us_data",
					"protocol": "https",
					"descr": "Update 'aboutUs' content and return the updated content",
					"method": "PUT",
					"path": "/ws/admin/about/{siteId}",
					"access": ["admin"],
					"pathParams": ["siteId"],
					"consumes": "application/x-www-form-urlencoded",
					"produces": "application/json",
					"response": "{\"user\":{},\"aboutUs\":{}}",
					"execute": false
				},
				{
					"id": 46,
					"name": "get_map_values_admin_view",
					"protocol": "https",
					"descr": "Return html resource at '/admin/mapvalues'",
					"path": "/ws/admin/mapvalues",
					"access": ["admin"],
					"produces": "text/html",
					"response": "<html>...</html>",
					"execute": false
				},
				{
					"id": 47,
					"name": "get_map_values_admin_data",
					"descr": "Retrieves 'mapvalues' configuration data and returns as json",
					"path": "/ws/admin/mapvalues",
					"access": ["admin"],
					"produces": "application/json",
					"response": "{\"user\":{},\"siteId\":'',\"mapValues\":{}}",
					"execute": false
				},
				{
					"id": 48,
					"name": "update_map_values_data",
					"protocol": "https",
					"descr": "Update 'mapvalues' content and return the updated content",
					"method": "PUT",
					"path": "/ws/admin/mapvalues/{siteId}",
					"access": ["admin"],
					"pathParams": ["siteId"],
					"consumes": "application/x-www-form-urlencoded",
					"produces": "application/json",
					"response": "{\"user\":{},\"mapValues\":{}}",
					"execute": false
				},
				{
					"id": 49,
					"name": "get_contact_us_admin_view",
					"protocol": "https",
					"descr": "Return html resource at '/admin/contactus'",
					"path": "/ws/admin/contact",
					"access": ["admin"],
					"produces": "text/html",
					"response": "<html>...</html>",
					"execute": false
				},
				{
					"id": 50,
					"name": "get_contact_us_admin_data",
					"protocol": "https",
					"descr": "Retrieves 'contactUs' configuration data and returns as json",
					"path": "/ws/admin/contact",
					"access": ["admin"],
					"produces": "application/json",
					"response": "{\"user\":{},\"siteId\":'',\"contactUs\":{}}",
					"execute": false
				},
				{
					"id": 51,
					"name": "update_contact_us_data",
					"protocol": "https",
					"descr": "Update 'contactUs' content and return the updated content",
					"method": "PUT",
					"path": "/ws/admin/contact/{siteId}",
					"access": ["admin"],
					"pathParams": ["siteId"],
					"consumes": "application/x-www-form-urlencoded",
					"produces": "application/json",
					"response": "{\"user\":{},\"contactUs\":{}}",
					"execute": false
				},
				{
					"id": 52,
					"name": "get_rest_api_admin_view",
					"protocol": "https",
					"descr": "Return html resource at '/admin/restapi'",
					"path": "/ws/admin/restapi",
					"access": ["admin"],
					"produces": "text/html",
					"response": "<html>...</html>",
					"execute": false
				},
				{
					"id": 53,
					"name": "get_rest_api_admin_data",
					"protocol": "https",
					"descr": "Retrieves 'rest' configuration data and returns as json",
					"path": "/ws/admin/restapi",
					"access": ["admin"],
					"produces": "application/json",
					"response": "{\"user\":{},\"rest\":{}}",
					"execute": false
				},
				{
					"id": 54,
					"name": "get_media_admin_view",
					"protocol": "https",
					"descr": "Return html resource at '/admin/media'",
					"path": "/ws/admin/media",
					"access": ["admin"],
					"produces": "text/html",
					"response": "<html>...</html>",
					"execute": false
				},
				{
					"id": 55,
					"name": "get_media_tree",
					"protocol": "https",
					"descr": "Create media tree from media folder and return as json",
					"path": "/ws/admin/media/tree",
					"access": ["admin"],
					"produces": "application/json",
					"response": "{}",
					"execute": false
				},
				{
					"id": 56,
					"name": "upload_to_media_folder",
					"protocol": "https",
					"descr": "Upload content to media directory and return updated media tree as json",
					"path": "/ws/admin/media/upload",
					"method": "POST",
					"access": ["admin"],
					"consumes": "multipart/form-data",
					"produces": "application/json",
					"entity": "{\"path\": \"/\", \"name\": \"\", \"file\": {\"type\": \"file\",\"name\":\"\",\"value\":\"\"}}",
					"response": "{}",
					"execute": false
				},
				{
					"id": 57,
					"name": "download_from_media_folder",
					"protocol": "https",
					"descr": "Download content from media directory and return as octet stream",
					"path": "/ws/admin/media/download",
					"query": "id={id}",
					"queryParams": ["id"],
					"access": ["admin"],
					"produces": "application/octet-stream",
					"response": "{}",
					"execute": false
				},
				{
					"id": 58,
					"name": "rename_media",
					"protocol": "https",
					"descr": "Rename media file and return updated media tree as json",
					"path": "/ws/admin/media/rename",
					"method": "PUT",
					"access": ["admin"],
					"consumes": "application/x-www-form-urlencoded",
					"produces": "application/json",
					"entity": "{\"currValue\":\"\",\"newValue\":\"\"}",
					"response": "{}",
					"execute": false
				},
				{
					"id": 59,
					"name": "remove_media",
					"protocol": "https",
					"descr": "Remove media file and return updated media tree as json",
					"path": "/ws/admin/media/remove",
					"method": "PUT",
					"access": ["admin"],
					"consumes": "application/x-www-form-urlencoded",
					"produces": "application/json",
					"entity": "{\"currValue\":\"\"}",
					"response": "{}",
					"execute": false
				}
			]
		}
	]
}
